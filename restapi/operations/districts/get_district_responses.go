// Code generated by go-swagger; DO NOT EDIT.

package districts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetDistrictOKCode is the HTTP code returned for type GetDistrictOK
const GetDistrictOKCode int = 200

/*GetDistrictOK OK Response

swagger:response getDistrictOK
*/
type GetDistrictOK struct {

	/*
	  In: Body
	*/
	Payload *models.DistrictResponse `json:"body,omitempty"`
}

// NewGetDistrictOK creates GetDistrictOK with default headers values
func NewGetDistrictOK() *GetDistrictOK {

	return &GetDistrictOK{}
}

// WithPayload adds the payload to the get district o k response
func (o *GetDistrictOK) WithPayload(payload *models.DistrictResponse) *GetDistrictOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get district o k response
func (o *GetDistrictOK) SetPayload(payload *models.DistrictResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDistrictOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDistrictNotFoundCode is the HTTP code returned for type GetDistrictNotFound
const GetDistrictNotFoundCode int = 404

/*GetDistrictNotFound Entity Not Found

swagger:response getDistrictNotFound
*/
type GetDistrictNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetDistrictNotFound creates GetDistrictNotFound with default headers values
func NewGetDistrictNotFound() *GetDistrictNotFound {

	return &GetDistrictNotFound{}
}

// WithPayload adds the payload to the get district not found response
func (o *GetDistrictNotFound) WithPayload(payload *models.NotFound) *GetDistrictNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get district not found response
func (o *GetDistrictNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDistrictNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
