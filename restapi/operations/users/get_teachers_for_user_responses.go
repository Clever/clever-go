// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetTeachersForUserOKCode is the HTTP code returned for type GetTeachersForUserOK
const GetTeachersForUserOKCode int = 200

/*
GetTeachersForUserOK OK Response

swagger:response getTeachersForUserOK
*/
type GetTeachersForUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.UsersResponse `json:"body,omitempty"`
}

// NewGetTeachersForUserOK creates GetTeachersForUserOK with default headers values
func NewGetTeachersForUserOK() *GetTeachersForUserOK {

	return &GetTeachersForUserOK{}
}

// WithPayload adds the payload to the get teachers for user o k response
func (o *GetTeachersForUserOK) WithPayload(payload *models.UsersResponse) *GetTeachersForUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teachers for user o k response
func (o *GetTeachersForUserOK) SetPayload(payload *models.UsersResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeachersForUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeachersForUserNotFoundCode is the HTTP code returned for type GetTeachersForUserNotFound
const GetTeachersForUserNotFoundCode int = 404

/*
GetTeachersForUserNotFound Entity Not Found

swagger:response getTeachersForUserNotFound
*/
type GetTeachersForUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetTeachersForUserNotFound creates GetTeachersForUserNotFound with default headers values
func NewGetTeachersForUserNotFound() *GetTeachersForUserNotFound {

	return &GetTeachersForUserNotFound{}
}

// WithPayload adds the payload to the get teachers for user not found response
func (o *GetTeachersForUserNotFound) WithPayload(payload *models.NotFound) *GetTeachersForUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get teachers for user not found response
func (o *GetTeachersForUserNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeachersForUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
