// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetSectionsForUserOKCode is the HTTP code returned for type GetSectionsForUserOK
const GetSectionsForUserOKCode int = 200

/*GetSectionsForUserOK OK Response

swagger:response getSectionsForUserOK
*/
type GetSectionsForUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.SectionsResponse `json:"body,omitempty"`
}

// NewGetSectionsForUserOK creates GetSectionsForUserOK with default headers values
func NewGetSectionsForUserOK() *GetSectionsForUserOK {

	return &GetSectionsForUserOK{}
}

// WithPayload adds the payload to the get sections for user o k response
func (o *GetSectionsForUserOK) WithPayload(payload *models.SectionsResponse) *GetSectionsForUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sections for user o k response
func (o *GetSectionsForUserOK) SetPayload(payload *models.SectionsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSectionsForUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSectionsForUserNotFoundCode is the HTTP code returned for type GetSectionsForUserNotFound
const GetSectionsForUserNotFoundCode int = 404

/*GetSectionsForUserNotFound Entity Not Found

swagger:response getSectionsForUserNotFound
*/
type GetSectionsForUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetSectionsForUserNotFound creates GetSectionsForUserNotFound with default headers values
func NewGetSectionsForUserNotFound() *GetSectionsForUserNotFound {

	return &GetSectionsForUserNotFound{}
}

// WithPayload adds the payload to the get sections for user not found response
func (o *GetSectionsForUserNotFound) WithPayload(payload *models.NotFound) *GetSectionsForUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sections for user not found response
func (o *GetSectionsForUserNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSectionsForUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
