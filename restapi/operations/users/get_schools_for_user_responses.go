// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetSchoolsForUserOKCode is the HTTP code returned for type GetSchoolsForUserOK
const GetSchoolsForUserOKCode int = 200

/*
GetSchoolsForUserOK OK Response

swagger:response getSchoolsForUserOK
*/
type GetSchoolsForUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.SchoolsResponse `json:"body,omitempty"`
}

// NewGetSchoolsForUserOK creates GetSchoolsForUserOK with default headers values
func NewGetSchoolsForUserOK() *GetSchoolsForUserOK {

	return &GetSchoolsForUserOK{}
}

// WithPayload adds the payload to the get schools for user o k response
func (o *GetSchoolsForUserOK) WithPayload(payload *models.SchoolsResponse) *GetSchoolsForUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schools for user o k response
func (o *GetSchoolsForUserOK) SetPayload(payload *models.SchoolsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchoolsForUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSchoolsForUserNotFoundCode is the HTTP code returned for type GetSchoolsForUserNotFound
const GetSchoolsForUserNotFoundCode int = 404

/*
GetSchoolsForUserNotFound Entity Not Found

swagger:response getSchoolsForUserNotFound
*/
type GetSchoolsForUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetSchoolsForUserNotFound creates GetSchoolsForUserNotFound with default headers values
func NewGetSchoolsForUserNotFound() *GetSchoolsForUserNotFound {

	return &GetSchoolsForUserNotFound{}
}

// WithPayload adds the payload to the get schools for user not found response
func (o *GetSchoolsForUserNotFound) WithPayload(payload *models.NotFound) *GetSchoolsForUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schools for user not found response
func (o *GetSchoolsForUserNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchoolsForUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
