// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetStudentsForUserOKCode is the HTTP code returned for type GetStudentsForUserOK
const GetStudentsForUserOKCode int = 200

/*GetStudentsForUserOK OK Response

swagger:response getStudentsForUserOK
*/
type GetStudentsForUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.UsersResponse `json:"body,omitempty"`
}

// NewGetStudentsForUserOK creates GetStudentsForUserOK with default headers values
func NewGetStudentsForUserOK() *GetStudentsForUserOK {

	return &GetStudentsForUserOK{}
}

// WithPayload adds the payload to the get students for user o k response
func (o *GetStudentsForUserOK) WithPayload(payload *models.UsersResponse) *GetStudentsForUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get students for user o k response
func (o *GetStudentsForUserOK) SetPayload(payload *models.UsersResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStudentsForUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetStudentsForUserNotFoundCode is the HTTP code returned for type GetStudentsForUserNotFound
const GetStudentsForUserNotFoundCode int = 404

/*GetStudentsForUserNotFound Entity Not Found

swagger:response getStudentsForUserNotFound
*/
type GetStudentsForUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetStudentsForUserNotFound creates GetStudentsForUserNotFound with default headers values
func NewGetStudentsForUserNotFound() *GetStudentsForUserNotFound {

	return &GetStudentsForUserNotFound{}
}

// WithPayload adds the payload to the get students for user not found response
func (o *GetStudentsForUserNotFound) WithPayload(payload *models.NotFound) *GetStudentsForUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get students for user not found response
func (o *GetStudentsForUserNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStudentsForUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
