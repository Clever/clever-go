// Code generated by go-swagger; DO NOT EDIT.

package courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetDistrictForCourseOKCode is the HTTP code returned for type GetDistrictForCourseOK
const GetDistrictForCourseOKCode int = 200

/*
GetDistrictForCourseOK OK Response

swagger:response getDistrictForCourseOK
*/
type GetDistrictForCourseOK struct {

	/*
	  In: Body
	*/
	Payload *models.DistrictResponse `json:"body,omitempty"`
}

// NewGetDistrictForCourseOK creates GetDistrictForCourseOK with default headers values
func NewGetDistrictForCourseOK() *GetDistrictForCourseOK {

	return &GetDistrictForCourseOK{}
}

// WithPayload adds the payload to the get district for course o k response
func (o *GetDistrictForCourseOK) WithPayload(payload *models.DistrictResponse) *GetDistrictForCourseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get district for course o k response
func (o *GetDistrictForCourseOK) SetPayload(payload *models.DistrictResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDistrictForCourseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDistrictForCourseNotFoundCode is the HTTP code returned for type GetDistrictForCourseNotFound
const GetDistrictForCourseNotFoundCode int = 404

/*
GetDistrictForCourseNotFound Entity Not Found

swagger:response getDistrictForCourseNotFound
*/
type GetDistrictForCourseNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetDistrictForCourseNotFound creates GetDistrictForCourseNotFound with default headers values
func NewGetDistrictForCourseNotFound() *GetDistrictForCourseNotFound {

	return &GetDistrictForCourseNotFound{}
}

// WithPayload adds the payload to the get district for course not found response
func (o *GetDistrictForCourseNotFound) WithPayload(payload *models.NotFound) *GetDistrictForCourseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get district for course not found response
func (o *GetDistrictForCourseNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDistrictForCourseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
