// Code generated by go-swagger; DO NOT EDIT.

package courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetSchoolsForCourseOKCode is the HTTP code returned for type GetSchoolsForCourseOK
const GetSchoolsForCourseOKCode int = 200

/*GetSchoolsForCourseOK OK Response

swagger:response getSchoolsForCourseOK
*/
type GetSchoolsForCourseOK struct {

	/*
	  In: Body
	*/
	Payload *models.SchoolsResponse `json:"body,omitempty"`
}

// NewGetSchoolsForCourseOK creates GetSchoolsForCourseOK with default headers values
func NewGetSchoolsForCourseOK() *GetSchoolsForCourseOK {

	return &GetSchoolsForCourseOK{}
}

// WithPayload adds the payload to the get schools for course o k response
func (o *GetSchoolsForCourseOK) WithPayload(payload *models.SchoolsResponse) *GetSchoolsForCourseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schools for course o k response
func (o *GetSchoolsForCourseOK) SetPayload(payload *models.SchoolsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchoolsForCourseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSchoolsForCourseNotFoundCode is the HTTP code returned for type GetSchoolsForCourseNotFound
const GetSchoolsForCourseNotFoundCode int = 404

/*GetSchoolsForCourseNotFound Entity Not Found

swagger:response getSchoolsForCourseNotFound
*/
type GetSchoolsForCourseNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetSchoolsForCourseNotFound creates GetSchoolsForCourseNotFound with default headers values
func NewGetSchoolsForCourseNotFound() *GetSchoolsForCourseNotFound {

	return &GetSchoolsForCourseNotFound{}
}

// WithPayload adds the payload to the get schools for course not found response
func (o *GetSchoolsForCourseNotFound) WithPayload(payload *models.NotFound) *GetSchoolsForCourseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schools for course not found response
func (o *GetSchoolsForCourseNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchoolsForCourseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
