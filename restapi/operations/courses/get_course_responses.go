// Code generated by go-swagger; DO NOT EDIT.

package courses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetCourseOKCode is the HTTP code returned for type GetCourseOK
const GetCourseOKCode int = 200

/*
GetCourseOK OK Response

swagger:response getCourseOK
*/
type GetCourseOK struct {

	/*
	  In: Body
	*/
	Payload *models.CourseResponse `json:"body,omitempty"`
}

// NewGetCourseOK creates GetCourseOK with default headers values
func NewGetCourseOK() *GetCourseOK {

	return &GetCourseOK{}
}

// WithPayload adds the payload to the get course o k response
func (o *GetCourseOK) WithPayload(payload *models.CourseResponse) *GetCourseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get course o k response
func (o *GetCourseOK) SetPayload(payload *models.CourseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCourseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCourseNotFoundCode is the HTTP code returned for type GetCourseNotFound
const GetCourseNotFoundCode int = 404

/*
GetCourseNotFound Entity Not Found

swagger:response getCourseNotFound
*/
type GetCourseNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetCourseNotFound creates GetCourseNotFound with default headers values
func NewGetCourseNotFound() *GetCourseNotFound {

	return &GetCourseNotFound{}
}

// WithPayload adds the payload to the get course not found response
func (o *GetCourseNotFound) WithPayload(payload *models.NotFound) *GetCourseNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get course not found response
func (o *GetCourseNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCourseNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
