// Code generated by go-swagger; DO NOT EDIT.

package schools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetSectionsForSchoolOKCode is the HTTP code returned for type GetSectionsForSchoolOK
const GetSectionsForSchoolOKCode int = 200

/*
GetSectionsForSchoolOK OK Response

swagger:response getSectionsForSchoolOK
*/
type GetSectionsForSchoolOK struct {

	/*
	  In: Body
	*/
	Payload *models.SectionsResponse `json:"body,omitempty"`
}

// NewGetSectionsForSchoolOK creates GetSectionsForSchoolOK with default headers values
func NewGetSectionsForSchoolOK() *GetSectionsForSchoolOK {

	return &GetSectionsForSchoolOK{}
}

// WithPayload adds the payload to the get sections for school o k response
func (o *GetSectionsForSchoolOK) WithPayload(payload *models.SectionsResponse) *GetSectionsForSchoolOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sections for school o k response
func (o *GetSectionsForSchoolOK) SetPayload(payload *models.SectionsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSectionsForSchoolOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSectionsForSchoolNotFoundCode is the HTTP code returned for type GetSectionsForSchoolNotFound
const GetSectionsForSchoolNotFoundCode int = 404

/*
GetSectionsForSchoolNotFound Entity Not Found

swagger:response getSectionsForSchoolNotFound
*/
type GetSectionsForSchoolNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetSectionsForSchoolNotFound creates GetSectionsForSchoolNotFound with default headers values
func NewGetSectionsForSchoolNotFound() *GetSectionsForSchoolNotFound {

	return &GetSectionsForSchoolNotFound{}
}

// WithPayload adds the payload to the get sections for school not found response
func (o *GetSectionsForSchoolNotFound) WithPayload(payload *models.NotFound) *GetSectionsForSchoolNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sections for school not found response
func (o *GetSectionsForSchoolNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSectionsForSchoolNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
