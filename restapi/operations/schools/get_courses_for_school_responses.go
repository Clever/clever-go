// Code generated by go-swagger; DO NOT EDIT.

package schools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetCoursesForSchoolOKCode is the HTTP code returned for type GetCoursesForSchoolOK
const GetCoursesForSchoolOKCode int = 200

/*
GetCoursesForSchoolOK OK Response

swagger:response getCoursesForSchoolOK
*/
type GetCoursesForSchoolOK struct {

	/*
	  In: Body
	*/
	Payload *models.CoursesResponse `json:"body,omitempty"`
}

// NewGetCoursesForSchoolOK creates GetCoursesForSchoolOK with default headers values
func NewGetCoursesForSchoolOK() *GetCoursesForSchoolOK {

	return &GetCoursesForSchoolOK{}
}

// WithPayload adds the payload to the get courses for school o k response
func (o *GetCoursesForSchoolOK) WithPayload(payload *models.CoursesResponse) *GetCoursesForSchoolOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get courses for school o k response
func (o *GetCoursesForSchoolOK) SetPayload(payload *models.CoursesResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCoursesForSchoolOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCoursesForSchoolNotFoundCode is the HTTP code returned for type GetCoursesForSchoolNotFound
const GetCoursesForSchoolNotFoundCode int = 404

/*
GetCoursesForSchoolNotFound Entity Not Found

swagger:response getCoursesForSchoolNotFound
*/
type GetCoursesForSchoolNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetCoursesForSchoolNotFound creates GetCoursesForSchoolNotFound with default headers values
func NewGetCoursesForSchoolNotFound() *GetCoursesForSchoolNotFound {

	return &GetCoursesForSchoolNotFound{}
}

// WithPayload adds the payload to the get courses for school not found response
func (o *GetCoursesForSchoolNotFound) WithPayload(payload *models.NotFound) *GetCoursesForSchoolNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get courses for school not found response
func (o *GetCoursesForSchoolNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCoursesForSchoolNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
