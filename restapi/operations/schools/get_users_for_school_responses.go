// Code generated by go-swagger; DO NOT EDIT.

package schools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetUsersForSchoolOKCode is the HTTP code returned for type GetUsersForSchoolOK
const GetUsersForSchoolOKCode int = 200

/*GetUsersForSchoolOK OK Response

swagger:response getUsersForSchoolOK
*/
type GetUsersForSchoolOK struct {

	/*
	  In: Body
	*/
	Payload *models.UsersResponse `json:"body,omitempty"`
}

// NewGetUsersForSchoolOK creates GetUsersForSchoolOK with default headers values
func NewGetUsersForSchoolOK() *GetUsersForSchoolOK {

	return &GetUsersForSchoolOK{}
}

// WithPayload adds the payload to the get users for school o k response
func (o *GetUsersForSchoolOK) WithPayload(payload *models.UsersResponse) *GetUsersForSchoolOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users for school o k response
func (o *GetUsersForSchoolOK) SetPayload(payload *models.UsersResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersForSchoolOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetUsersForSchoolNotFoundCode is the HTTP code returned for type GetUsersForSchoolNotFound
const GetUsersForSchoolNotFoundCode int = 404

/*GetUsersForSchoolNotFound Entity Not Found

swagger:response getUsersForSchoolNotFound
*/
type GetUsersForSchoolNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetUsersForSchoolNotFound creates GetUsersForSchoolNotFound with default headers values
func NewGetUsersForSchoolNotFound() *GetUsersForSchoolNotFound {

	return &GetUsersForSchoolNotFound{}
}

// WithPayload adds the payload to the get users for school not found response
func (o *GetUsersForSchoolNotFound) WithPayload(payload *models.NotFound) *GetUsersForSchoolNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get users for school not found response
func (o *GetUsersForSchoolNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUsersForSchoolNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
