// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetSectionsForResourceOKCode is the HTTP code returned for type GetSectionsForResourceOK
const GetSectionsForResourceOKCode int = 200

/*
GetSectionsForResourceOK OK Response

swagger:response getSectionsForResourceOK
*/
type GetSectionsForResourceOK struct {

	/*
	  In: Body
	*/
	Payload *models.SectionsResponse `json:"body,omitempty"`
}

// NewGetSectionsForResourceOK creates GetSectionsForResourceOK with default headers values
func NewGetSectionsForResourceOK() *GetSectionsForResourceOK {

	return &GetSectionsForResourceOK{}
}

// WithPayload adds the payload to the get sections for resource o k response
func (o *GetSectionsForResourceOK) WithPayload(payload *models.SectionsResponse) *GetSectionsForResourceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sections for resource o k response
func (o *GetSectionsForResourceOK) SetPayload(payload *models.SectionsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSectionsForResourceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSectionsForResourceNotFoundCode is the HTTP code returned for type GetSectionsForResourceNotFound
const GetSectionsForResourceNotFoundCode int = 404

/*
GetSectionsForResourceNotFound Entity Not Found

swagger:response getSectionsForResourceNotFound
*/
type GetSectionsForResourceNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetSectionsForResourceNotFound creates GetSectionsForResourceNotFound with default headers values
func NewGetSectionsForResourceNotFound() *GetSectionsForResourceNotFound {

	return &GetSectionsForResourceNotFound{}
}

// WithPayload adds the payload to the get sections for resource not found response
func (o *GetSectionsForResourceNotFound) WithPayload(payload *models.NotFound) *GetSectionsForResourceNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get sections for resource not found response
func (o *GetSectionsForResourceNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSectionsForResourceNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
