// Code generated by go-swagger; DO NOT EDIT.

package terms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Clever/clever-go/models"
)

// GetSchoolsForTermOKCode is the HTTP code returned for type GetSchoolsForTermOK
const GetSchoolsForTermOKCode int = 200

/*GetSchoolsForTermOK OK Response

swagger:response getSchoolsForTermOK
*/
type GetSchoolsForTermOK struct {

	/*
	  In: Body
	*/
	Payload *models.SchoolsResponse `json:"body,omitempty"`
}

// NewGetSchoolsForTermOK creates GetSchoolsForTermOK with default headers values
func NewGetSchoolsForTermOK() *GetSchoolsForTermOK {

	return &GetSchoolsForTermOK{}
}

// WithPayload adds the payload to the get schools for term o k response
func (o *GetSchoolsForTermOK) WithPayload(payload *models.SchoolsResponse) *GetSchoolsForTermOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schools for term o k response
func (o *GetSchoolsForTermOK) SetPayload(payload *models.SchoolsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchoolsForTermOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetSchoolsForTermNotFoundCode is the HTTP code returned for type GetSchoolsForTermNotFound
const GetSchoolsForTermNotFoundCode int = 404

/*GetSchoolsForTermNotFound Entity Not Found

swagger:response getSchoolsForTermNotFound
*/
type GetSchoolsForTermNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.NotFound `json:"body,omitempty"`
}

// NewGetSchoolsForTermNotFound creates GetSchoolsForTermNotFound with default headers values
func NewGetSchoolsForTermNotFound() *GetSchoolsForTermNotFound {

	return &GetSchoolsForTermNotFound{}
}

// WithPayload adds the payload to the get schools for term not found response
func (o *GetSchoolsForTermNotFound) WithPayload(payload *models.NotFound) *GetSchoolsForTermNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get schools for term not found response
func (o *GetSchoolsForTermNotFound) SetPayload(payload *models.NotFound) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSchoolsForTermNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
