// Code generated by go-swagger; DO NOT EDIT.

package terms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Clever/clever-go/models"
)

// GetSchoolsForTermReader is a Reader for the GetSchoolsForTerm structure.
type GetSchoolsForTermReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchoolsForTermReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchoolsForTermOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSchoolsForTermNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /terms/{id}/schools] getSchoolsForTerm", response, response.Code())
	}
}

// NewGetSchoolsForTermOK creates a GetSchoolsForTermOK with default headers values
func NewGetSchoolsForTermOK() *GetSchoolsForTermOK {
	return &GetSchoolsForTermOK{}
}

/*
GetSchoolsForTermOK describes a response with status code 200, with default header values.

OK Response
*/
type GetSchoolsForTermOK struct {
	Payload *models.SchoolsResponse
}

// IsSuccess returns true when this get schools for term o k response has a 2xx status code
func (o *GetSchoolsForTermOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schools for term o k response has a 3xx status code
func (o *GetSchoolsForTermOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schools for term o k response has a 4xx status code
func (o *GetSchoolsForTermOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schools for term o k response has a 5xx status code
func (o *GetSchoolsForTermOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schools for term o k response a status code equal to that given
func (o *GetSchoolsForTermOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get schools for term o k response
func (o *GetSchoolsForTermOK) Code() int {
	return 200
}

func (o *GetSchoolsForTermOK) Error() string {
	return fmt.Sprintf("[GET /terms/{id}/schools][%d] getSchoolsForTermOK  %+v", 200, o.Payload)
}

func (o *GetSchoolsForTermOK) String() string {
	return fmt.Sprintf("[GET /terms/{id}/schools][%d] getSchoolsForTermOK  %+v", 200, o.Payload)
}

func (o *GetSchoolsForTermOK) GetPayload() *models.SchoolsResponse {
	return o.Payload
}

func (o *GetSchoolsForTermOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SchoolsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchoolsForTermNotFound creates a GetSchoolsForTermNotFound with default headers values
func NewGetSchoolsForTermNotFound() *GetSchoolsForTermNotFound {
	return &GetSchoolsForTermNotFound{}
}

/*
GetSchoolsForTermNotFound describes a response with status code 404, with default header values.

Entity Not Found
*/
type GetSchoolsForTermNotFound struct {
	Payload *models.NotFound
}

// IsSuccess returns true when this get schools for term not found response has a 2xx status code
func (o *GetSchoolsForTermNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schools for term not found response has a 3xx status code
func (o *GetSchoolsForTermNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schools for term not found response has a 4xx status code
func (o *GetSchoolsForTermNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schools for term not found response has a 5xx status code
func (o *GetSchoolsForTermNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schools for term not found response a status code equal to that given
func (o *GetSchoolsForTermNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get schools for term not found response
func (o *GetSchoolsForTermNotFound) Code() int {
	return 404
}

func (o *GetSchoolsForTermNotFound) Error() string {
	return fmt.Sprintf("[GET /terms/{id}/schools][%d] getSchoolsForTermNotFound  %+v", 404, o.Payload)
}

func (o *GetSchoolsForTermNotFound) String() string {
	return fmt.Sprintf("[GET /terms/{id}/schools][%d] getSchoolsForTermNotFound  %+v", 404, o.Payload)
}

func (o *GetSchoolsForTermNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetSchoolsForTermNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
