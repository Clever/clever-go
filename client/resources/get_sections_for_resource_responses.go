// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Clever/clever-go/models"
)

// GetSectionsForResourceReader is a Reader for the GetSectionsForResource structure.
type GetSectionsForResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSectionsForResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSectionsForResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSectionsForResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /resources/{id}/sections] getSectionsForResource", response, response.Code())
	}
}

// NewGetSectionsForResourceOK creates a GetSectionsForResourceOK with default headers values
func NewGetSectionsForResourceOK() *GetSectionsForResourceOK {
	return &GetSectionsForResourceOK{}
}

/*
GetSectionsForResourceOK describes a response with status code 200, with default header values.

OK Response
*/
type GetSectionsForResourceOK struct {
	Payload *models.SectionsResponse
}

// IsSuccess returns true when this get sections for resource o k response has a 2xx status code
func (o *GetSectionsForResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get sections for resource o k response has a 3xx status code
func (o *GetSectionsForResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get sections for resource o k response has a 4xx status code
func (o *GetSectionsForResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get sections for resource o k response has a 5xx status code
func (o *GetSectionsForResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get sections for resource o k response a status code equal to that given
func (o *GetSectionsForResourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get sections for resource o k response
func (o *GetSectionsForResourceOK) Code() int {
	return 200
}

func (o *GetSectionsForResourceOK) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/sections][%d] getSectionsForResourceOK  %+v", 200, o.Payload)
}

func (o *GetSectionsForResourceOK) String() string {
	return fmt.Sprintf("[GET /resources/{id}/sections][%d] getSectionsForResourceOK  %+v", 200, o.Payload)
}

func (o *GetSectionsForResourceOK) GetPayload() *models.SectionsResponse {
	return o.Payload
}

func (o *GetSectionsForResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SectionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSectionsForResourceNotFound creates a GetSectionsForResourceNotFound with default headers values
func NewGetSectionsForResourceNotFound() *GetSectionsForResourceNotFound {
	return &GetSectionsForResourceNotFound{}
}

/*
GetSectionsForResourceNotFound describes a response with status code 404, with default header values.

Entity Not Found
*/
type GetSectionsForResourceNotFound struct {
	Payload *models.NotFound
}

// IsSuccess returns true when this get sections for resource not found response has a 2xx status code
func (o *GetSectionsForResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get sections for resource not found response has a 3xx status code
func (o *GetSectionsForResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get sections for resource not found response has a 4xx status code
func (o *GetSectionsForResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get sections for resource not found response has a 5xx status code
func (o *GetSectionsForResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get sections for resource not found response a status code equal to that given
func (o *GetSectionsForResourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get sections for resource not found response
func (o *GetSectionsForResourceNotFound) Code() int {
	return 404
}

func (o *GetSectionsForResourceNotFound) Error() string {
	return fmt.Sprintf("[GET /resources/{id}/sections][%d] getSectionsForResourceNotFound  %+v", 404, o.Payload)
}

func (o *GetSectionsForResourceNotFound) String() string {
	return fmt.Sprintf("[GET /resources/{id}/sections][%d] getSectionsForResourceNotFound  %+v", 404, o.Payload)
}

func (o *GetSectionsForResourceNotFound) GetPayload() *models.NotFound {
	return o.Payload
}

func (o *GetSectionsForResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotFound)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
