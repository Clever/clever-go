// Code generated by go-swagger; DO NOT EDIT.

package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetUsersForResourceParams creates a new GetUsersForResourceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetUsersForResourceParams() *GetUsersForResourceParams {
	return &GetUsersForResourceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetUsersForResourceParamsWithTimeout creates a new GetUsersForResourceParams object
// with the ability to set a timeout on a request.
func NewGetUsersForResourceParamsWithTimeout(timeout time.Duration) *GetUsersForResourceParams {
	return &GetUsersForResourceParams{
		timeout: timeout,
	}
}

// NewGetUsersForResourceParamsWithContext creates a new GetUsersForResourceParams object
// with the ability to set a context for a request.
func NewGetUsersForResourceParamsWithContext(ctx context.Context) *GetUsersForResourceParams {
	return &GetUsersForResourceParams{
		Context: ctx,
	}
}

// NewGetUsersForResourceParamsWithHTTPClient creates a new GetUsersForResourceParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetUsersForResourceParamsWithHTTPClient(client *http.Client) *GetUsersForResourceParams {
	return &GetUsersForResourceParams{
		HTTPClient: client,
	}
}

/* GetUsersForResourceParams contains all the parameters to send to the API endpoint
   for the get users for resource operation.

   Typically these are written to a http.Request.
*/
type GetUsersForResourceParams struct {

	// EndingBefore.
	EndingBefore *string

	// ID.
	ID string

	// Limit.
	Limit *int64

	// Role.
	Role *string

	// StartingAfter.
	StartingAfter *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get users for resource params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUsersForResourceParams) WithDefaults() *GetUsersForResourceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get users for resource params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetUsersForResourceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get users for resource params
func (o *GetUsersForResourceParams) WithTimeout(timeout time.Duration) *GetUsersForResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get users for resource params
func (o *GetUsersForResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get users for resource params
func (o *GetUsersForResourceParams) WithContext(ctx context.Context) *GetUsersForResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get users for resource params
func (o *GetUsersForResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get users for resource params
func (o *GetUsersForResourceParams) WithHTTPClient(client *http.Client) *GetUsersForResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get users for resource params
func (o *GetUsersForResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndingBefore adds the endingBefore to the get users for resource params
func (o *GetUsersForResourceParams) WithEndingBefore(endingBefore *string) *GetUsersForResourceParams {
	o.SetEndingBefore(endingBefore)
	return o
}

// SetEndingBefore adds the endingBefore to the get users for resource params
func (o *GetUsersForResourceParams) SetEndingBefore(endingBefore *string) {
	o.EndingBefore = endingBefore
}

// WithID adds the id to the get users for resource params
func (o *GetUsersForResourceParams) WithID(id string) *GetUsersForResourceParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get users for resource params
func (o *GetUsersForResourceParams) SetID(id string) {
	o.ID = id
}

// WithLimit adds the limit to the get users for resource params
func (o *GetUsersForResourceParams) WithLimit(limit *int64) *GetUsersForResourceParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get users for resource params
func (o *GetUsersForResourceParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithRole adds the role to the get users for resource params
func (o *GetUsersForResourceParams) WithRole(role *string) *GetUsersForResourceParams {
	o.SetRole(role)
	return o
}

// SetRole adds the role to the get users for resource params
func (o *GetUsersForResourceParams) SetRole(role *string) {
	o.Role = role
}

// WithStartingAfter adds the startingAfter to the get users for resource params
func (o *GetUsersForResourceParams) WithStartingAfter(startingAfter *string) *GetUsersForResourceParams {
	o.SetStartingAfter(startingAfter)
	return o
}

// SetStartingAfter adds the startingAfter to the get users for resource params
func (o *GetUsersForResourceParams) SetStartingAfter(startingAfter *string) {
	o.StartingAfter = startingAfter
}

// WriteToRequest writes these params to a swagger request
func (o *GetUsersForResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndingBefore != nil {

		// query param ending_before
		var qrEndingBefore string

		if o.EndingBefore != nil {
			qrEndingBefore = *o.EndingBefore
		}
		qEndingBefore := qrEndingBefore
		if qEndingBefore != "" {

			if err := r.SetQueryParam("ending_before", qEndingBefore); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Role != nil {

		// query param role
		var qrRole string

		if o.Role != nil {
			qrRole = *o.Role
		}
		qRole := qrRole
		if qRole != "" {

			if err := r.SetQueryParam("role", qRole); err != nil {
				return err
			}
		}
	}

	if o.StartingAfter != nil {

		// query param starting_after
		var qrStartingAfter string

		if o.StartingAfter != nil {
			qrStartingAfter = *o.StartingAfter
		}
		qStartingAfter := qrStartingAfter
		if qStartingAfter != "" {

			if err := r.SetQueryParam("starting_after", qStartingAfter); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
